
// Generated by https://start.springboot.io
// 优质的 spring/boot/data/security/cloud 框架中文文档尽在 => https://springdoc.cn
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' // 기본 로깅 시스템인 logback을 제외
	}

}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	//자바 역직렬화 문제 해결 패키지
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// JSP
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.0.0'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
	runtimeOnly 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'

	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:4.10.0'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.2'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}


//build 시 통합테스트는 제외
//test {
//	filter {
//		excludeTestsMatching "*ControllerTest*"
//	}
//}

// QueryDSL 빌드 옵션 (선택) ~
def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
// ~ Querydsl

// gradle 빌드시 scan 을 찾지못하는 에러 조치
try {
	buildScan {
		termsOfServiceUrl = 'https://gradle.com/terms-of-service'
		termsOfServiceAgree = 'yes'
	}
} catch (Exception ignored) {
}